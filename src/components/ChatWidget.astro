---
import "@fontsource/montserrat/700.css";
import "@fontsource/montserrat/400.css";
---

<div id="chat-widget-container" class="fixed bottom-6 right-6 z-50">
  <!-- Botón flotante oculto inicialmente -->
  <button
    id="chat-toggle"
    class="bg-[#ffcc66] text-white shadow-xl rounded-full w-16 h-16 flex items-center justify-center hover:scale-110 transition-transform border-2 border-white hidden"
    aria-label="Abrir chat con Jason"
  >
    <img
      src="/jason-profile.webp"
      alt="Jason Castro"
      class="size-10 rounded-full border-2 border-white"
    />
  </button>

  <!-- Chat box abierto por defecto -->
  <div
    id="chat-widget"
    class="mt-4 w-[360px] max-h-[80vh] bg-white border border-[#e2e8f0] rounded-xl shadow-xl flex flex-col overflow-hidden animate-fade-in"
  >
    <!-- Header con botón cerrar -->
    <div
      class="bg-[#ffcc66] text-[#1C1C1C] px-4 py-3 text-base font-bold flex items-center justify-between font-[Montserrat]"
    >
      <div class="flex items-center gap-3">
        <img
          src="/jason-profile.webp"
          alt="Jason Castro"
          class="w-10 h-10 rounded-full border-2 border-white"
        />
        Chateá con Jason
      </div>
      <button
        id="chat-close"
        class="text-xl font-bold text-[#1C1C1C] hover:text-red-600 transition"
        aria-label="Cerrar chat"
      >
        ✕
      </button>
    </div>

    <!-- Mensajes -->
    <div
      id="messages"
      class="flex-1 overflow-y-auto p-4 space-y-3 text-sm text-[#334155] font-[Montserrat]"
    >
      <div class="text-[#94a3b8] text-center">
        Escribí tu consulta y Jason responderá
      </div>
    </div>

    <!-- Input -->
    <form id="chat-form" class="border-t border-[#e2e8f0] p-3 flex gap-2">
      <input
        id="chat-input"
        type="text"
        required
        placeholder="Escribí tu mensaje..."
        class="flex-1 px-3 py-2 text-sm border border-[#cbd5e1] rounded-md focus:outline-none focus:ring-2 focus:ring-[#ffcc66]"
      />
      <button
        type="submit"
        class="px-4 py-2 bg-[#ffcc66] text-[#1C1C1C] text-sm rounded-md hover:bg-[#eab308] transition font-semibold"
      >
        Enviar
      </button>
    </form>
  </div>
</div>

<style>
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    animation: fade-in 0.4s ease-out forwards;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const toggleBtn = document.getElementById("chat-toggle");
    const closeBtn = document.getElementById("chat-close");
    const chatWidget = document.getElementById("chat-widget");
    const form = document.getElementById("chat-form");
    const input = document.getElementById("chat-input");
    const messages = document.getElementById("messages");

    const chatClosed = localStorage.getItem("chatClosed");

    if (chatWidget && toggleBtn) {
      if (chatClosed === "true") {
        // Si ya lo había cerrado, mostrar el botón flotante y ocultar el chat
        chatWidget.classList.add("hidden");
        toggleBtn.classList.remove("hidden");
      } else {
        // Mostrar el chat por defecto
        chatWidget.classList.remove("hidden");
        toggleBtn.classList.add("hidden");
      }
    }

    closeBtn?.addEventListener("click", () => {
      chatWidget?.classList.add("hidden");
      toggleBtn?.classList.remove("hidden");
      localStorage.setItem("chatClosed", "true");
    });

    toggleBtn?.addEventListener("click", () => {
      chatWidget?.classList.remove("hidden");
      toggleBtn?.classList.add("hidden");
      localStorage.removeItem("chatClosed");
    });

    form?.addEventListener("submit", async (e) => {
      e.preventDefault();
      if (!(input instanceof HTMLInputElement) || !messages) return;

      const userMsg = input.value.trim();
      if (!userMsg) return;

      const userBubble = document.createElement("div");
      userBubble.className = "bg-gray-100 p-2 rounded-lg text-right";
      userBubble.textContent = userMsg;
      messages.appendChild(userBubble);
      input.value = "";

      messages.scrollTop = messages.scrollHeight;

      const aiBubble = document.createElement("div");
      aiBubble.className =
        "bg-[#ffcc66]/10 p-2 italic text-[#334155] rounded-lg";
      aiBubble.textContent = "Jason está escribiendo...";
      messages.appendChild(aiBubble);

      try {
        const res = await fetch("/api/chat", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ prompt: userMsg }),
        });
        const data = await res.json();
        aiBubble.textContent =
          data.result || "No se pudo generar una respuesta.";
      } catch (err) {
        aiBubble.textContent = "❌ Error al conectar con Jason.";
      }

      messages.scrollTop = messages.scrollHeight;
    });
  });
</script>
